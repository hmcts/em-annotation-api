server:
  port: 8080
spring:
  application:
    name: EM Annotation App
  config:
    import: "optional:configtree:/mnt/secrets/em-anno/"
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    database: postgresql
    show-sql: ${SHOW_SQL:false}
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
  liquibase:
    change-log: classpath:/db/db.changelog-master.xml
    enabled: ${ENABLE_LIQUIBASE:false}
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:6432/emannotationapp}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    tomcat:
      max-active: ${MAX_ACTIVE_DB_CONNECTIONS:50} # Maximum number of active connections that can be allocated from this pool at the same time.
      max-idle: ${MAX_IDLE_DB_CONNECTIONS:25}
      max-wait: ${MAX_WAIT_DB_CONNECTIONS:10000} # Number of ms to wait before throwing an exception if no connection is available.
      test-on-borrow: ${TEST_ON_BORROW_DB_CONNECTION:true}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      auto-commit: false
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:http://localhost:5000/o}
        registration:
          oidc:
            client-id: microservicekey-em-annotation-app
            client-secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}
  main:
    allow-circular-references: true # Need this for the Mapper library to work

#liquibase:
#
#  enabled: ${ENABLE_DB_MIGRATE:true}
#  change-log: classpath:/db/db.changelog-master.xml

management:
  endpoint:
    health:
      show-details: "always"
      show-components: "always"
      probes:
        enabled: true
  endpoints:
    web:
      base-path: '/'
      exposure:
        include:
         - health
         - info
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    db:
      enabled: true
    disk:
      enabled: true
      threshold: ${HEALTH_DISK_THRESHOLD:262144000}
    status:
     order:
       - FATAL
       - DOWN
       - UNKNOWN
       - UP
  info:
     build:
       enabled: true # Whether to enable build info.
     defaults:
       enabled: true # Whether to enable default info contributors.
     env:
       enabled: true # Whether to enable environment info.
     git:
       enabled: true # Whether to enable git info.
       mode: simple # Mode to use to expose git information.

info:
  app:
    environment: ${PACKAGES_ENVIRONMENT:local}
    project: ${PACKAGES_PROJECT:em-annotation}
    name: ${PACKAGES_NAME:cor}
#    version: ${PACKAGES_VERSION:unknown}

# auth-checker-lib
auth:
  idam:
    client:
      baseUrl: ${IDAM_API_BASE_URI:http://localhost:5000}
  provider:
    service:
      client:
        baseUrl: ${S2S_BASE_URI:http://localhost:8489}

# service-auth-provider-client lib
idam:
  s2s-auth:
    url: ${S2S_BASE_URI:http://localhost:8489}
    totp_secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}
    microservice: ${S2S_SERVICE_NAME:em_annotation_app}
  s2s-authorised:
    services: ${S2S_NAMES_WHITELIST:sscs,divorce,ccd,em_npa_app,em_api,em_gw,ccd_gw,ccd_data,divorce_document_upload,divorce_document_generator,probate_backend,jui_webapp,pui_webapp,xui_webapp}
  api:
    url: ${IDAM_API_BASE_URI:http://localhost:5000}
    client:
      id: microservicekey-em-annotation-app
      secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}
      redirect_uri: ${IDAM_WEBSHOW_WHITELIST:http://localhost:8080/oauth2redirect}
      grant_type: 'password'
      scope: 'openid roles profile'

azure:
  app_insights_key: ${APPINSIGHTS_INSTRUMENTATIONKEY:true}
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:d30268e8-8979-4579-8d58-010dbe03a1e6}

app-insights:
  dev-mode: off
  request-component: on
  telemetry-component: on

endpoint-toggles:
  metadata: ${ENABLE_METADATA_ENDPOINT:false}

# OpenId Connect
oidc:
  issuer: ${OIDC_ISSUER_BASE_URI:http://localhost:8080/openam/oauth2/hmcts}

springdoc:
  packagesToScan: uk.gov.hmcts.reform.em.annotation.rest
  pathsToMatch: /**
