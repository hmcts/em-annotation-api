buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.3.13")
        classpath("net.serenity-bdd:serenity-single-page-report:2.3.13")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.4.5'
    id 'uk.gov.hmcts.java' version '0.12.12'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
    id 'checkstyle'
    id 'au.com.dius.pact' version '4.1.8'
    id "info.solidsoft.pitest" version '1.5.2'

}

apply plugin: 'java'
apply plugin: 'idea'
apply from: 'gradle/liquibase.gradle'
apply plugin: 'net.serenity-bdd.aggregator'

if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}


group 'uk.gov.hmcts.reform.em.annotation'
version '1.0.0'
sourceCompatibility = 11
targetCompatibility = 11

mainClassName = 'uk.gov.hmcts.reform.em.annotation.Application'

configurations {
    aatImplementation.extendsFrom(testImplementation)
    aatRuntimeOnly.extendsFrom(testRuntimeOnly)
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

def versions = [
        postgresql         : '42.2.20',
        springfoxSwagger   : '2.9.2',
        springSecurity     : '5.4.7',
        fasterXmlJackson   : '2.12.3',
        pitest             : '1.5.1',
        gradlePitest       : '1.3.0',
        sonarPitest        : '0.5',
        h2                 : '1.4.197',
        liquibase          : '3.5.3',
        serenity           : '2.3.13',
        serenityreporter   : '2.3.13',
        serenityRestAssured: '2.3.4',
        pact_version       : '4.0.10',
        hibernate          : '5.4.25.Final',
        logging            : '5.1.7'
]

sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations.all {
    exclude group: 'com.vaadin.external.google',module: 'android-json'
}

dependencies {

    def withoutStuff = {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
        exclude group: 'uk.gov.hmcts.reform', module: 'java-logging-spring'
    }

    def withoutAlpnApi = {
        exclude group: 'org.eclipse.jetty.alpn', module: 'alpn-api'
    }

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.3'
    
    implementation ('org.springframework.cloud:spring-cloud-openfeign:3.0.3') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-actuator'
    }

    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.48'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.48'
    
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.module', name: 'jackson-module-jaxb-annotations', version: versions.fasterXmlJackson

    implementation group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    implementation "org.zalando:problem-spring-web:0.26.2"
    implementation("io.springfox:springfox-swagger2:${versions.springfoxSwagger}")
    implementation("io.springfox:springfox-swagger-ui:${versions.springfoxSwagger}")
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation( 'org.apache.httpcomponents:httpclient:4.5.10')
    implementation "org.liquibase:liquibase-core"
    implementation "org.liquibase:liquibase-core"
    implementation("org.postgresql:postgresql:${versions.postgresql}")
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'
    implementation "javax.transaction:javax.transaction-api"
    implementation group: 'org.ehcache', name: 'ehcache', version: '3.9.5'

    implementation "com.zaxxer:HikariCP:5.0.0"
    
    implementation group:'org.hibernate', name: 'hibernate-core', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-jcache', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-entitymanager', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-envers', version: versions.hibernate
    
    implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4'
    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.logging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.logging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.logging
        
    implementation "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"

    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity

    implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '4.0.0'
    implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '2.0.0'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    annotationProcessor "org.projectlombok:lombok:1.18.20"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    annotationProcessor group:'org.hibernate', name: 'hibernate-jpamodelgen', version: versions.hibernate
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor", withoutStuff
    testImplementation "org.springframework.boot:spring-boot-starter-test", {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
    testImplementation 'com.warrenstrange:googleauth:1.5.0'

    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.6.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.3'

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.3"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.3"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.3"

    //pact contract testing

    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenityRestAssured, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter

    testImplementation 'com.github.hmcts:fortify-client:1.2.0:all'

    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit', version: versions.pact_version, withoutAlpnApi
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit5', version: versions.pact_version, withoutAlpnApi
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-java8', version: versions.pact_version, withoutAlpnApi
    implementation group: 'au.com.dius', name: 'pact-jvm-consumer', version: versions.pact_version, withoutAlpnApi

    contractTestImplementation("org.junit.jupiter:junit-jupiter-api:5.6.3")
    contractTestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.3")
    contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.6.3')

    aatImplementation("org.junit.jupiter:junit-jupiter-api:5.6.3")
    aatRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.3")
    aatImplementation 'com.github.hmcts:em-test-helper:1.19.1'

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath
}

processAatResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencyManagement {
    dependencies {

        //CVE-2020-15824, CVE-2020-29582
        dependencySet(group: 'org.jetbrains.kotlin', version: '1.5.0-M1') {
            entry 'kotlin'
            entry 'kotlin-stdlib'
            entry 'kotlin-reflect'
            entry 'kotlin-stdlib-common'
            entry 'kotlin-stdlib-jdk7'
            entry 'kotlin-stdlib-jdk8'
        }

        //CVE-2021-29425
        dependencySet(group: 'commons-io', version: '2.11.0') {
          entry 'commons-io'
        }

        // Do not change - START
        // Changing below will break Serenity Report generation
        dependencySet(group: 'org.junit.jupiter', version: '5.6.3') {
            entry 'junit-jupiter'
            entry 'junit-jupiter-api'
            entry 'junit-jupiter-params'
        }

        dependencySet(group: 'org.junit.vintage', version: '5.6.2') {
            entry 'junit-vintage-engine'
        }

        dependencySet(group: 'net.bytebuddy', version: '1.11.2') {
            entry 'byte-buddy'
            entry 'byte-buddy-agent'
        }
        // Do not change - END

        //CVE-2021-27568
        dependencySet(group: 'net.minidev', version: '2.4.7') {
            entry 'json-smart'
        }

        //CVE-2021-22118
        dependencySet(group: 'org.springframework', version: '5.3.8') {
            entry 'spring-aop'
            entry 'spring-aspects'
            entry 'spring-beans'
            entry 'spring-context'
            entry 'spring-core'
            entry 'spring-expression'
            entry 'spring-jcl'
            entry 'spring-jdbc'
            entry 'spring-orm'
            entry 'spring-tx'
            entry 'spring-web'
            entry 'spring-webmvc'
        }

        //CVE-2021-33037
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.48') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-websocket'
        }

        //CVE-2021-28170
        dependencySet(group: 'org.glassfish', version: '4.0.0') {
            entry 'jakarta.el'
        }
    }
}

bootJar {
    baseName 'em-annotation-app'
    archiveName = "$baseName"+".jar"
    destinationDir = file("$rootDir/build/libs")
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

def coverageExclusionList = [
    '**uk/gov/hmcts/reform/em/annotation/Application*',
    '**uk/gov/hmcts/reform/em/annotation/appinsights/*',
    '**uk/gov/hmcts/reform/em/annotation/domain/*',
    '**uk/gov/hmcts/reform/em/annotation/authchecker/*',
    '**uk/gov/hmcts/reform/em/annotation/config/*',
    '**uk/gov/hmcts/reform/em/annotation/config/audit/*',
    '**uk/gov/hmcts/reform/em/annotation/config/security/*',
    '**uk/gov/hmcts/reform/em/annotation/service/mapper/*',
    '**uk/gov/hmcts/reform/em/annotation/service/dto/*'

]

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = false

        xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.em.annotation.*']
    excludedClasses = [
                    'uk.gov.hmcts.reform.em.annotation.appinsights.*' ,
                    'uk.gov.hmcts.reform.em.annotation.authchecker.*' ,
                    'uk.gov.hmcts.reform.em.annotation.config.*',
                    'uk.gov.hmcts.reform.em.annotation.info.*',
                    'uk.gov.hmcts.reform.em.annotation.Application.java',
                    'uk.gov.hmcts.reform.em.annotation.service.util.*'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation ='build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    maxMutationsPerClass = 15
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true

}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

project.tasks['sonarqube'].group = "Verification"

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

configurations {
    contractTestImplementation.extendsFrom testImplementation
    contractTestRuntimeOnly.extendsFrom testRuntimeOnly
}

checkstyle {
    maxWarnings = 10
    ignoreFailures = true
    toolVersion = '8.12'
    reportsDir = file("$project.buildDir/reports/checkstyle")
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)

idea {
    module {
        testSourceDirs += project.sourceSets.aat.java.srcDirs
        testResourceDirs += project.sourceSets.aat.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testResourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}

test {
    useJUnitPlatform()
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/annotation/functional/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

// Serenity Reporting
functional.finalizedBy(aggregate)

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/annotation/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}



task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/em/annotation/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        version = project.pactVersion
    }
}

serenity {
    reports = ["single-page-html"]
}

dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

compileJava.dependsOn processResources

