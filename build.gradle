import uk.gov.hmcts.rse.AuthMode

buildscript {
    dependencies {
        classpath("org.flywaydb:flyway-database-postgresql:11.6.0")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '3.4.4'
    id 'uk.gov.hmcts.java' version '0.12.65'
    id 'org.owasp.dependencycheck' version '12.1.0'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'org.sonarqube' version '6.1.0.5360'
    id 'jacoco'
    id 'checkstyle'
    id 'au.com.dius.pact' version '4.6.17'
    id "info.solidsoft.pitest" version '1.15.0'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.16'
    id 'com.github.hmcts.rse-cft-lib' version '0.19.1618'
    id 'org.flywaydb.flyway' version '11.6.0'
}

apply plugin: 'java'
apply plugin: 'idea'

if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}


group 'uk.gov.hmcts.reform.em.annotation'
version '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

mainClassName = 'uk.gov.hmcts.reform.em.annotation.Application'

configurations {
    aatImplementation.extendsFrom(testImplementation)
    aatRuntimeOnly.extendsFrom(testRuntimeOnly)
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url  'https://repo.spring.io/milestone/'}
}

def versions = [
        postgresql         : '42.7.5',
        springSecurity     : '6.4.4',
        fasterXmlJackson   : '2.18.3',
        pitest             : '1.5.1',
        gradlePitest       : '1.3.0',
        sonarPitest        : '0.5',
        serenity           : '4.2.17',
        pact_version       : '4.6.17',
        hibernate          : '6.6.5.Final',
        logging            : '6.1.8',
        junit5             : '5.12.1',
        log4JVersion       : '2.20.0',
        mapstruct          : '1.6.3',
]

sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    test {
        java.srcDir 'src/test/java'
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations.all {
    exclude group: 'com.vaadin.external.google',   module: 'android-json'
    exclude group: 'org.springframework.security', module: 'spring-security-rsa'
}

dependencies {

    def withoutStuff = {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
        exclude group: 'com.github.hmcts.java-logging', module: 'java-logging-spring'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-actuator'
    }

    def withoutPactExtras = {
        exclude group: 'org.jetbrains.kotlinx',   module: 'kotlinx-coroutines-io'
        exclude group: 'org.jetbrains.kotlinx',   module: 'kotlinx-io'
        exclude group: 'org.eclipse.jetty.alpn', module: 'alpn-api'
    }

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'


    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '4.2.1'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign', version: '4.2.1'

    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5-jakarta', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-databind',version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.module', name: 'jackson-module-blackbird', version: versions.fasterXmlJackson

    implementation group: 'org.zalando', name: 'problem-spring-web', version: '0.29.1'
    implementation group: 'org.zalando', name: 'jackson-datatype-problem', version: '0.27.1'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.6'
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.6-jre'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '11.6.0'
    runtimeOnly group: 'org.flywaydb', name: 'flyway-database-postgresql', version: '11.6.0'
    implementation group: 'org.postgresql', name: 'postgresql', version: versions.postgresql
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.10.1'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.9.0'
    implementation group: 'org.ehcache', name: 'ehcache', version: '3.10.8'

    implementation group:'org.hibernate', name: 'hibernate-core', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-jcache', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-envers', version: versions.hibernate

    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.logging

    implementation group: 'org.mapstruct', name: 'mapstruct', version: versions.mapstruct

    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity

    implementation group: 'com.github.hmcts', name: 'core-case-data-store-client', version: '5.0.5'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.0'
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '3.0.3'
    
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.9.0'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.2.1'

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.38'


    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.38'
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapstruct
    annotationProcessor group:'org.hibernate', name: 'hibernate-jpamodelgen', version: versions.hibernate
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', withoutStuff
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'

    aatRuntimeOnly group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'
    aatRuntimeOnly group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '4.0.5'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version:versions.junit5
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit5

    //pact contract testing

    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.18'
    testImplementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.18'

    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.8', classifier: 'all', {
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
    }

    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.20.6'

    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '5.2.0'

    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit', version: versions.pact_version, withoutPactExtras
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version, withoutPactExtras

    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version:versions.junit5
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version:versions.junit5

    aatImplementation group: 'org.json', name: 'json', version: '20250107'
    aatImplementation group: 'com.github.hmcts', name: 'em-test-helper', version:'2.1.1'

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    cftlibImplementation 'org.springframework.boot:spring-boot-devtools'
}

processAatResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencyManagement {
    dependencies {
        //CVE-2022-23437
        dependencySet(group: 'xerces', version: '2.12.2') {
            entry 'xercesImpl'
        }
        //CVE-2020-13956
        dependencySet(group: 'org.apache.httpcomponents', version: '4.5.14') {
            entry 'fluent-hc'
        }

        //CVE-2023-6378
        dependencySet(group: 'ch.qos.logback', version: '1.5.18') {
            entry 'logback-classic'
            entry 'logback-core'
        }

        dependencySet(group: 'org.junit.platform', version: '1.12.1') {
            entry 'junit-platform-commons'
            entry 'junit-platform-engine'
            entry 'junit-platform-launcher'
        }
    }
}

bootJar {
    getArchiveFileName().set(provider {
        'em-annotation-app.jar'
    })
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}
def coverageExclusionList = [
        '**uk/gov/hmcts/reform/em/annotation/Application*',
        '**uk/gov/hmcts/reform/em/annotation/domain/*',
        '**uk/gov/hmcts/reform/em/annotation/service/dto/*',
        '**uk/gov/hmcts/reform/em/annotation/info/*',
        '**uk/gov/hmcts/reform/em/annotation/data/migration/PendingMigrationScriptException*',
        '**uk/gov/hmcts/reform/em/annotation/data/migration/FlywayNoOpStrategy*',
        '**uk/gov/hmcts/reform/em/annotation/config/FlywayConfiguration*'
]

jacocoTestReport {
    executionData(test)

    reports {
        xml.required = true
        csv.required = false

        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.em.annotation.*']
    excludedClasses = [
            'uk.gov.hmcts.reform.em.annotation.config.*',
            'uk.gov.hmcts.reform.em.annotation.info.*',
            'uk.gov.hmcts.reform.em.annotation.Application.java',
            'uk.gov.hmcts.reform.em.annotation.service.util.*'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation ='build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true
    junit5PluginVersion = '1.2.1'
    pitestVersion = '1.17.3'
}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.outputLocation}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.test.exclusions", "**/test/**"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

project.tasks['sonarqube'].group = "Verification"

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

configurations {
    contractTestImplementation.extendsFrom testImplementation
    contractTestRuntimeOnly.extendsFrom testRuntimeOnly
}

checkstyle {
    maxWarnings = 0
    toolVersion = '10.23.0'
    reportsDir = file("$project.buildDir/reports/checkstyle")
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)

idea {
    module {
        testSourceDirs += project.sourceSets.aat.java.srcDirs
        testResourceDirs += project.sourceSets.aat.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testResourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/annotation/functional/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")

    useJUnitPlatform()
}

// Serenity Reporting
// functional.finalizedBy(aggregate)

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/annotation/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")

    useJUnitPlatform()

}



task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/em/annotation/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        version = project.pactVersion
    }
}

pactPublish {
    pactPublish = project.pact.publish
}

bootWithCCD {
    authMode = AuthMode.Local
    environment 'RSE_LIB_ADDITIONAL_DATABASES', 'emannotationapp'
    environment 'DATA_STORE_S2S_AUTHORISED_SERVICES', 'ccd_gw,em_annotation_app'
    environment 'DOC_ASSEMBLY_SERVER_PORT', '8081'


}

serenity {
    reports = ["single-page-html"]
}

dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

compileJava.dependsOn processResources

flyway {
    url = System.getenv('FLYWAY_URL')
    user = System.getenv('FLYWAY_USER')
    password = System.getenv('FLYWAY_PASSWORD')
    baselineOnMigrate = true
    baselineVersion = '1'
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}
